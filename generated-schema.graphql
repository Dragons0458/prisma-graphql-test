# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateTask {
  _count: TaskCountAggregate
  _max: TaskMaxAggregate
  _min: TaskMinAggregate
}

input CreateTaskInput {
  description: String!
  name: String!
}

type Mutation {
  createTask(data: TaskCreateInput!): Task!
  createTemp(createTaskInput: CreateTaskInput!): Task!
  deleteManyTask(where: TaskWhereInput): AffectedRowsOutput!
  deleteTask(where: TaskWhereUniqueInput!): Task
  updateManyTask(data: TaskUpdateManyMutationInput!, where: TaskWhereInput): AffectedRowsOutput!
  updateTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task
  upsertTask(create: TaskCreateInput!, update: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task!
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  aggregateTask(cursor: TaskWhereUniqueInput, orderBy: [TaskOrderByWithRelationInput!], skip: Int, take: Int, where: TaskWhereInput): AggregateTask!
  findFirstTask(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum!], orderBy: [TaskOrderByWithRelationInput!], skip: Int, take: Int, where: TaskWhereInput): Task
  getCount: Int!
  groupByTask(by: [TaskScalarFieldEnum!]!, having: TaskScalarWhereWithAggregatesInput, orderBy: [TaskOrderByWithAggregationInput!], skip: Int, take: Int, where: TaskWhereInput): [TaskGroupBy!]!
  task(where: TaskWhereUniqueInput!): Task
  tasks(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum!], orderBy: [TaskOrderByWithRelationInput!], skip: Int, take: Int, where: TaskWhereInput): [Task!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Task {
  description: String!
  id: String!
  name: String!
}

type TaskCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  name: Int!
}

input TaskCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input TaskCreateInput {
  description: String!
  id: String
  name: String!
}

type TaskGroupBy {
  _count: TaskCountAggregate
  _max: TaskMaxAggregate
  _min: TaskMinAggregate
  description: String!
  id: String!
  name: String!
}

type TaskMaxAggregate {
  description: String
  id: String
  name: String
}

input TaskMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

type TaskMinAggregate {
  description: String
  id: String
  name: String
}

input TaskMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input TaskOrderByWithAggregationInput {
  _count: TaskCountOrderByAggregateInput
  _max: TaskMaxOrderByAggregateInput
  _min: TaskMinOrderByAggregateInput
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

input TaskOrderByWithRelationInput {
  description: SortOrder
  id: SortOrder
  name: SortOrder
}

enum TaskScalarFieldEnum {
  description
  id
  name
}

input TaskScalarWhereWithAggregatesInput {
  AND: [TaskScalarWhereWithAggregatesInput!]
  NOT: [TaskScalarWhereWithAggregatesInput!]
  OR: [TaskScalarWhereWithAggregatesInput!]
  description: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
}

input TaskUpdateInput {
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TaskUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TaskWhereInput {
  AND: [TaskWhereInput!]
  NOT: [TaskWhereInput!]
  OR: [TaskWhereInput!]
  description: StringFilter
  id: StringFilter
  name: StringFilter
}

input TaskWhereUniqueInput {
  id: String
  name: String
}
